/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lms.project;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ubaid ur rehman
 */
public class SearchRecord extends javax.swing.JFrame {

    /**
     * Creates new form SearchRecord
     */
    public SearchRecord() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        select = new javax.swing.JComboBox<>();
        search = new javax.swing.JTextField();
        searchrecord = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        select.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select-", "ID", "Name" }));
        select.setToolTipText("Select Anyone Option");
        jPanel1.add(select);
        select.setBounds(390, 180, 160, 40);

        search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(search);
        search.setBounds(310, 250, 320, 50);

        searchrecord.setBackground(new java.awt.Color(0, 0, 0));
        searchrecord.setForeground(new java.awt.Color(255, 255, 255));
        searchrecord.setText("Search");
        searchrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchrecordActionPerformed(evt);
            }
        });
        jPanel1.add(searchrecord);
        searchrecord.setBounds(430, 330, 80, 30);

        clear.setBackground(new java.awt.Color(0, 0, 0));
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel1.add(clear);
        clear.setBounds(20, 460, 80, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search Student Record");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(320, 100, 370, 60);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/Icons/Mix Icon/Home.png"))); // NOI18N
        jButton1.setToolTipText("Back to StudentRecord");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(-10, 30, 87, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/Project BackGround/download.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 930, 530);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 932, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
         search.setText("");
         select.setSelectedIndex(1);

        // TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void searchrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchrecordActionPerformed
           String searchStr = search.getText();
               String id,Name,dept,book;
               String month,day,year;
               String day1,month1,year1;
               String DOII,DOEE;
               StringTokenizer tok=null;
               StringTokenizer tokk=null;
               boolean flag=false;
              if( select.getSelectedItem() == "-Select-")
       {
           JOptionPane.showMessageDialog(this, "Select ID or Name from drop down");
       }
              else if(select.getSelectedItem() == "ID")
                      {
                           FileReader fr = null;
                           BufferedReader br= null;
           try{
               fr = new FileReader("Student.txt");
               br = new BufferedReader(fr);
               

               while((id=br.readLine())!=null)
               {
                    id=id+"\n";
                    Name = br.readLine()+"\n";
                    dept=br.readLine()+"\n";
                    book=br.readLine()+"\n";
                    DOII = br.readLine()+"\n";
                    DOEE=br.readLine();
                  
                    
                    tok=new StringTokenizer(DOII);
                    month=tok.nextToken()+" ";
                    day=tok.nextToken()+" ";
                    year=tok.nextToken()+"\n";
                   tokk=new StringTokenizer(DOEE);
                     month1=tokk.nextToken()+" ";
                      day1=tokk.nextToken()+" ";
                      year1=tokk.nextToken()+"\n"; 
                      

                    
                    
     
                    
                    Date d1=new Date(month,day,year);
                    
                    Date d2 =new Date(month1,day1,year1);
                   
                   if(id.equalsIgnoreCase(searchStr+"\n"))
                   {
                       flag=true;
                       Student s=new Student(id,Name,dept,book,d1,d2);
                      
                       //Product p = new Product(Integer.parseInt(id),name,Integer.parseInt(price),exp,0.0f,"");
                       JOptionPane.showMessageDialog(this, s.toString());
                       break;
                   }
               }
               if(flag==false)
               {
                   JOptionPane.showMessageDialog(this, searchStr+"is not found in the records.");
               }  
           }
           catch(IOException e){
           e.printStackTrace();
           }
           finally
           {
               if(br!=null)
               {
                   try {
                       br.close();
                   } catch (IOException ex) {
                       Logger.getLogger(SearchRecord.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
               if(fr!=null)
               {
                   try {
                       fr.close();
                   } catch (IOException ex) {
                       Logger.getLogger(SearchRecord.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
           }
         }
         else if(select.getSelectedItem() == "Name")
         {
            FileReader fr = null;
            BufferedReader br= null;
           try{
               fr = new FileReader("Student.txt");
               br = new BufferedReader(fr);
               

               while((id=br.readLine())!=null)
               {
                    id=id+"\n";
                    Name =br.readLine()+"\n";
                    dept=br.readLine()+"\n";
                    book=br.readLine()+"\n";
                    DOII = br.readLine()+"\n";
                    DOEE=br.readLine();
                  
                    
                    tok=new StringTokenizer(DOII);
                    month=tok.nextToken()+" ";
                    day=tok.nextToken()+" ";
                    year=tok.nextToken()+"\n";
                   tokk=new StringTokenizer(DOEE);
                     month1=tokk.nextToken()+" ";
                      day1=tokk.nextToken()+" ";
                      year1=tokk.nextToken()+"\n"; 
                      
                    Date d1=new Date(month,day,year);
                    
                    Date d2 =new Date(month1,day1,year1);
                   
                   if(Name.equalsIgnoreCase(searchStr+"\n"))
                   {
                       flag=true;
                       Student s=new Student(id,Name,dept,book,d1,d2);
                      
                       //Product p = new Product(Integer.parseInt(id),name,Integer.parseInt(price),exp,0.0f,"");
                       JOptionPane.showMessageDialog(this, s.toString());
                       break;
                   }
                  
               }
               if(flag==false)
               {
                   JOptionPane.showMessageDialog(this, searchStr+" is not found in the records.");
               }  
           }
           catch(IOException e){
           e.printStackTrace();
           }
           finally
           {
               if(br!=null)
               {
                   try {
                       br.close();
                   } catch (IOException ex) {
                       Logger.getLogger(SearchRecord.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
               if(fr!=null)
               {
                   try {
                       fr.close();
                   } catch (IOException ex) {
                       Logger.getLogger(SearchRecord.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
           }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchrecordActionPerformed
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentRecord().setVisible(true);
            }
        });     
        

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchrecord;
    private javax.swing.JComboBox<String> select;
    // End of variables declaration//GEN-END:variables
}
